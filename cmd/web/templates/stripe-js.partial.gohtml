{{define "stripe-js"}}

<script src="https://js.stripe.com/v3"></script>

<script>
  let card;
  let stripe;
  const cardMessages = document.getElementById("card-messages");
  const payButton = document.getElementById("pay-button")
  const porcessing = document.getElementById("processing-payment")
  
  //  initialize with my publishable key
  stripe = Stripe("{{.StripePublishableKey}}")

  // prevent user to click on the pay button twice 
  function hidePayButton() {
    payButton.classList.add("d-none");
    porcessing.classList.remove("d-none");
  }
  
  function showPayButton() {
    payButton.classList.remove("d-none");
    porcessing.classList.add("d-none");
  }

  function showCardError(msg) {
    cardMessages.classList.add("alert-danger");
    cardMessages.classList.remove("alert-success");
    cardMessages.classList.remove("d-none");
    cardMessages.innerText = msg;
  }

  function showCardSuccess() {
    cardMessages.classList.remove("alert-danger");     
    cardMessages.classList.add("alert-success");       
    cardMessages.classList.remove("d-none");
    cardMessages.innerText = "Transaction successful";
  }

  function val() {
    let form = document.getElementById("charge_form")
    if (form.checkValidity() === false) {
      this.event.preventDefault();
      this.event.stopPropagation();
      form.classList.add("was-validated");
      return;
    }
    form.classList.add("was-validated")
    hidePayButton();

    let amountToCharge = String(parseFloat(document.getElementById("amount").value) * 100)
    
    let payload = {
      amount: amountToCharge,
      currency: 'usd',
    }

    const requestOptions = {
      method: 'post',
      headres: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(payload),
    }

    // apiUrl = "http://127.0.0.1:4001/api/payment-intent"
    let apiUrl = "{{.API}}/api/payment-intent"
    fetch(apiUrl, requestOptions)
      .then(response => response.text()) 
      .then(response => {
        let data;
        try {
          data = JSON.parse(response);
          stripe.confirmCardPayment(data.client_secret, {
            payment_method: {
              card: card,
              billing_details: {
                name: document.getElementById("cardholder-name").value,
              }
            }
          }).then(function(result) {
            if (result.error) {
              // card declined or something went wrong witj the card
              showCardError(result.error.message);
              showPayButton();
            } else if (result.paymentIntent) {
              if (result.paymentIntent.status === "succeeded") {
                // we have charge the card 
                document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0];
                document.getElementById("payment_intent").value = result.paymentIntent.id;
                document.getElementById("payment_amount").value = result.paymentIntent.amount;
                document.getElementById("payment_currency").value = result.paymentIntent.currency;
                porcessing.classList.add("d-none");
                showCardSuccess();
                // would submit the form
                document.getElementById("charge_form").submit();

              }
            }
          })
        } catch (err) {
          showCardError("Invalid response from payment gateway!");
          showPayButtons();
        }
      })
  }

  (function () {
    // create stripe & elements
    const elements = stripe.elements();
    const style = {
      // stripe especial css style
      base : {
        fontSize: '16px',
        lineHeight: '24px',
      }
    };

    //create card entry 
    card = elements.create('card', {
      style: style,
      hidePostalCode: true,
    });
    card.mount("#card-element");

    // check for input errors - https://stripe.com/docs/js/element/events/on_change?type=cardElement 
    card.on("change", function(event) {
      var displayError = document.getElementById("card-error");
      if (event.error) {
        displayError.classList.remove('d-none');
        displayError.textContent = event.error.message;
      } else {
        displayError.classList.add('d-none');
        displayError.textConten = '';
      }
    })
  })();

</script>

{{end}}