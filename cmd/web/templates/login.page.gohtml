{{template "base" .}}

{{define "title"}}
  Login
{{end}}

{{define "content"}}
<div class="row">
  <div class="col-md-6 offset-md-3">

    <div class="alert alert-danger text-center d-none" id="login-messages"></div>

    <form action="#" method="post"
    name="login_form" id="login_form"
    class="d-block needs-validation login-form"
    autocomplete="off" novalidate>

    <h2 class="mt-2 text-center mb-3">Login</h2>
    <hr>

    <div class="mb-3">
      <label for="email" class="form-label">Email</label>
      <input type="email" class="form-control" id="email" name="email"
      required="" autocomplete="email-new">
    </div>

    <div class="mb-3">
      <label for="password" class="form-label">Password</label>
      
      <div class="input-group">
        <input type="password" class="form-control" id="password" name="password"
        required="" autocomplete="password-new">
        <div class="input-group-append">
          <button type="button" class="btn btn-outline-secondary" id="toggle_password">
              <i class="bi bi-eye"></i>
          </button>
        </div>
      </div>
    </div>

    <hr>
    <a href="javascript:void(0)" class="btn btn-primary" onclick="val()">Login</a>
    </form>

  </div>  
</div>
{{end}}

{{define "js"}}
<script>
  const loginMessages = document.getElementById("login-messages");

  function showError(msg) {
    loginMessages.classList.add("alert-danger");
    loginMessages.classList.remove("alert-success");
    loginMessages.classList.remove("d-none");
    loginMessages.innerText = msg;
  }

  function showSuccess() {
    loginMessages.classList.remove("alert-danger");     
    loginMessages.classList.add("alert-success");       
    loginMessages.classList.remove("d-none");
    loginMessages.innerText = "Login successful";
  }


  function val(){
    let form = document.getElementById("login_form")
    if (form.checkValidity() === false) {
      this.event.preventDefault();
      this.event.stopPropagation();
      form.classList.add("was-validated");
      return;
    }
    form.classList.add("was-validated")

    
    let payload = {
      email: document.getElementById("email").value,
      password: document.getElementById("password").value,
    }

    const requestOptions = {
      method: 'post',
      headres: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(payload),
    }

    let apiUrl = "{{.API}}/api/authenticate"
    fetch(apiUrl, requestOptions)
      .then(response => response.json()) 
      .then(data => {
        console.log(data);
        if (data.error === false) {
          localStorage.setItem('token', data.authentication_token.token);
          localStorage.setItem('token_expiry', data.authentication_token.expiry);
          showSuccess();
          location.href = "/"
        } else {
          showError(data.message);
        }
      })
  }

  document.addEventListener("DOMContentLoaded", function () {
    const passwordInput = document.getElementById("password");
    const toggleButton = document.getElementById("toggle_password");
    const icon = toggleButton.querySelector("i");

    // view password functionality
    toggleButton.addEventListener("mousedown", function () {
        passwordInput.type = "text";
        icon.classList.remove("bi-eye");
        icon.classList.add("bi-eye-slash");
    });

    toggleButton.addEventListener("mouseup", function () {
        passwordInput.type = "password";
        icon.classList.remove("bi-eye-slash");
        icon.classList.add("bi-eye");
    });

    toggleButton.addEventListener("mouseleave", function () {
        passwordInput.type = "password";
        icon.classList.remove("bi-eye-slash");
        icon.classList.add("bi-eye");
    });
  });
</script>
{{end}}