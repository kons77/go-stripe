{{template "base" .}}

{{define "title"}}
  Reset Password
{{end}}

{{define "content"}}
  <div class="row">
    <div class="col-md-6 offset-md-3">      

      <div class="alert alert-danger text-center d-none" id="messages"></div>

      <form action="#" method="post" 
        name="reset_form" id="reset_form"
        class="d-block needs-validation"
        autocomplete="off" novalidate="">

        <h2 class="mt-2 text-center mb-3">Reset Password</h2>
        <hr>

        <div class="mb-3">
          <label for="password" class="form-label">Password</label>
          
          <div class="input-group">
            <input type="password" class="form-control" id="password" name="password"
            required="" autocomplete="password-new">
            <button type="button" class="btn btn-outline-secondary" id="toggle-password">
                <i class="bi bi-eye"></i>
            </button>            
          </div>
        </div>   

        <div class="mb-3">
          <label for="confirm-password" class="form-label">Confirm Password</label>
          
          <div class="input-group">
            <input type="password" class="form-control" id="confirm-password" name="confirm-password"
            required="" autocomplete="confirm-password-new">
            <button type="button" class="btn btn-outline-secondary" id="toggle-confirm-password">
              <i class="bi bi-eye"></i>
            </button>            
          </div>
        </div>  

        <hr>
        <a href="javascript:void(0)" class="btn btn-primary" onclick="val()">Reset Password</a>

    </form>


    </div>
  </div>


{{end}}

{{define "js"}}
<script>

  const messages = document.getElementById("messages");

  function showError(msg) {
    messages.classList.add("alert-danger");
    messages.classList.remove("alert-success");
    messages.classList.remove("d-none");
    messages.innerText = msg;
  }

  function showSuccess() {
    messages.classList.remove("alert-danger");     
    messages.classList.add("alert-success");       
    messages.classList.remove("d-none");
    messages.innerText = "Password reset!";
  }


  function val(){
    let form = document.getElementById("reset_form")
    if (form.checkValidity() === false) {
      this.event.preventDefault();
      this.event.stopPropagation();
      form.classList.add("was-validated");
      return;
    }
    form.classList.add("was-validated")

    if (document.getElementById("password").value !== document.getElementById("confirm-password").value) {
      showError("Passwords do not match!")
      return
    }

    let payload = {
      password: document.getElementById("password").value,
      email: '{{index .Data "email"}}',
    }

    const requestOptions = {
      method: 'post',
      headres: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(payload),
    }

    let apiUrl = "{{.API}}/api/reset-password"
    fetch(apiUrl, requestOptions)
      .then(response => response.json()) 
      .then(data => {
        console.log(data);
        if (data.error === false) {          
          showSuccess();
          setTimeout(function(){
            location.href = "/login";
          }, 2000)
        } else {
          showError(data.message);
        }
      })
  }



  document.addEventListener("DOMContentLoaded", function () {
    //Function to set up password visibility toggle
    function setupPasswordToggle(inputID, toggleID) {
      const input = document.getElementById(inputID);
      const toggleButton = document.getElementById(toggleID);
      const icon = toggleButton.querySelector("i");

      function showPassword() {
        input.type = "text";
        icon.classList.remove("bi-eye");
        icon.classList.add("bi-eye-slash");
      }

      function hidePassword() {
        input.type = "password";
        icon.classList.remove("bi-eye-slash");
        icon.classList.add("bi-eye");
      }

      toggleButton.addEventListener("mousedown", showPassword);
      toggleButton.addEventListener("mouseup", hidePassword);
      toggleButton.addEventListener("mouseleave", hidePassword);
    }

    // Set up toggle functionality for both password fields
    setupPasswordToggle("password", "toggle-password");
    setupPasswordToggle("confirm-password", "toggle-confirm-password");    
  });

</script>
{{end}}